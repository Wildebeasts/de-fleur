/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestimonialsImport } from './routes/testimonials'
import { Route as ShopDetailsImport } from './routes/shopDetails'
import { Route as ShopImport } from './routes/shop'
import { Route as SalesCustomerInsightsImport } from './routes/sales-customer-insights'
import { Route as RegisterImport } from './routes/register'
import { Route as QuizresultImport } from './routes/quiz_result'
import { Route as QuizImport } from './routes/quiz'
import { Route as LoginImport } from './routes/login'
import { Route as JournalImport } from './routes/journal'
import { Route as GlossaryImport } from './routes/glossary'
import { Route as CollectionsImport } from './routes/collections'
import { Route as CartImport } from './routes/cart'
import { Route as BrandlistImport } from './routes/brand_list'
import { Route as BlogImport } from './routes/blog'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TestimonialsRoute = TestimonialsImport.update({
  id: '/testimonials',
  path: '/testimonials',
  getParentRoute: () => rootRoute,
} as any)

const ShopDetailsRoute = ShopDetailsImport.update({
  id: '/shopDetails',
  path: '/shopDetails',
  getParentRoute: () => rootRoute,
} as any)

const ShopRoute = ShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any)

const SalesCustomerInsightsRoute = SalesCustomerInsightsImport.update({
  id: '/sales-customer-insights',
  path: '/sales-customer-insights',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const QuizresultRoute = QuizresultImport.update({
  id: '/quiz_result',
  path: '/quiz_result',
  getParentRoute: () => rootRoute,
} as any)

const QuizRoute = QuizImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const JournalRoute = JournalImport.update({
  id: '/journal',
  path: '/journal',
  getParentRoute: () => rootRoute,
} as any)

const GlossaryRoute = GlossaryImport.update({
  id: '/glossary',
  path: '/glossary',
  getParentRoute: () => rootRoute,
} as any)

const CollectionsRoute = CollectionsImport.update({
  id: '/collections',
  path: '/collections',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const BrandlistRoute = BrandlistImport.update({
  id: '/brand_list',
  path: '/brand_list',
  getParentRoute: () => rootRoute,
} as any)

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/brand_list': {
      id: '/brand_list'
      path: '/brand_list'
      fullPath: '/brand_list'
      preLoaderRoute: typeof BrandlistImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/collections': {
      id: '/collections'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof CollectionsImport
      parentRoute: typeof rootRoute
    }
    '/glossary': {
      id: '/glossary'
      path: '/glossary'
      fullPath: '/glossary'
      preLoaderRoute: typeof GlossaryImport
      parentRoute: typeof rootRoute
    }
    '/journal': {
      id: '/journal'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof JournalImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizImport
      parentRoute: typeof rootRoute
    }
    '/quiz_result': {
      id: '/quiz_result'
      path: '/quiz_result'
      fullPath: '/quiz_result'
      preLoaderRoute: typeof QuizresultImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/sales-customer-insights': {
      id: '/sales-customer-insights'
      path: '/sales-customer-insights'
      fullPath: '/sales-customer-insights'
      preLoaderRoute: typeof SalesCustomerInsightsImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopImport
      parentRoute: typeof rootRoute
    }
    '/shopDetails': {
      id: '/shopDetails'
      path: '/shopDetails'
      fullPath: '/shopDetails'
      preLoaderRoute: typeof ShopDetailsImport
      parentRoute: typeof rootRoute
    }
    '/testimonials': {
      id: '/testimonials'
      path: '/testimonials'
      fullPath: '/testimonials'
      preLoaderRoute: typeof TestimonialsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/brand_list': typeof BrandlistRoute
  '/cart': typeof CartRoute
  '/collections': typeof CollectionsRoute
  '/glossary': typeof GlossaryRoute
  '/journal': typeof JournalRoute
  '/login': typeof LoginRoute
  '/quiz': typeof QuizRoute
  '/quiz_result': typeof QuizresultRoute
  '/register': typeof RegisterRoute
  '/sales-customer-insights': typeof SalesCustomerInsightsRoute
  '/shop': typeof ShopRoute
  '/shopDetails': typeof ShopDetailsRoute
  '/testimonials': typeof TestimonialsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/brand_list': typeof BrandlistRoute
  '/cart': typeof CartRoute
  '/collections': typeof CollectionsRoute
  '/glossary': typeof GlossaryRoute
  '/journal': typeof JournalRoute
  '/login': typeof LoginRoute
  '/quiz': typeof QuizRoute
  '/quiz_result': typeof QuizresultRoute
  '/register': typeof RegisterRoute
  '/sales-customer-insights': typeof SalesCustomerInsightsRoute
  '/shop': typeof ShopRoute
  '/shopDetails': typeof ShopDetailsRoute
  '/testimonials': typeof TestimonialsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/brand_list': typeof BrandlistRoute
  '/cart': typeof CartRoute
  '/collections': typeof CollectionsRoute
  '/glossary': typeof GlossaryRoute
  '/journal': typeof JournalRoute
  '/login': typeof LoginRoute
  '/quiz': typeof QuizRoute
  '/quiz_result': typeof QuizresultRoute
  '/register': typeof RegisterRoute
  '/sales-customer-insights': typeof SalesCustomerInsightsRoute
  '/shop': typeof ShopRoute
  '/shopDetails': typeof ShopDetailsRoute
  '/testimonials': typeof TestimonialsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/blog'
    | '/brand_list'
    | '/cart'
    | '/collections'
    | '/glossary'
    | '/journal'
    | '/login'
    | '/quiz'
    | '/quiz_result'
    | '/register'
    | '/sales-customer-insights'
    | '/shop'
    | '/shopDetails'
    | '/testimonials'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/blog'
    | '/brand_list'
    | '/cart'
    | '/collections'
    | '/glossary'
    | '/journal'
    | '/login'
    | '/quiz'
    | '/quiz_result'
    | '/register'
    | '/sales-customer-insights'
    | '/shop'
    | '/shopDetails'
    | '/testimonials'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/blog'
    | '/brand_list'
    | '/cart'
    | '/collections'
    | '/glossary'
    | '/journal'
    | '/login'
    | '/quiz'
    | '/quiz_result'
    | '/register'
    | '/sales-customer-insights'
    | '/shop'
    | '/shopDetails'
    | '/testimonials'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRoute
  BrandlistRoute: typeof BrandlistRoute
  CartRoute: typeof CartRoute
  CollectionsRoute: typeof CollectionsRoute
  GlossaryRoute: typeof GlossaryRoute
  JournalRoute: typeof JournalRoute
  LoginRoute: typeof LoginRoute
  QuizRoute: typeof QuizRoute
  QuizresultRoute: typeof QuizresultRoute
  RegisterRoute: typeof RegisterRoute
  SalesCustomerInsightsRoute: typeof SalesCustomerInsightsRoute
  ShopRoute: typeof ShopRoute
  ShopDetailsRoute: typeof ShopDetailsRoute
  TestimonialsRoute: typeof TestimonialsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRoute,
  BrandlistRoute: BrandlistRoute,
  CartRoute: CartRoute,
  CollectionsRoute: CollectionsRoute,
  GlossaryRoute: GlossaryRoute,
  JournalRoute: JournalRoute,
  LoginRoute: LoginRoute,
  QuizRoute: QuizRoute,
  QuizresultRoute: QuizresultRoute,
  RegisterRoute: RegisterRoute,
  SalesCustomerInsightsRoute: SalesCustomerInsightsRoute,
  ShopRoute: ShopRoute,
  ShopDetailsRoute: ShopDetailsRoute,
  TestimonialsRoute: TestimonialsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/blog",
        "/brand_list",
        "/cart",
        "/collections",
        "/glossary",
        "/journal",
        "/login",
        "/quiz",
        "/quiz_result",
        "/register",
        "/sales-customer-insights",
        "/shop",
        "/shopDetails",
        "/testimonials"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/brand_list": {
      "filePath": "brand_list.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/collections": {
      "filePath": "collections.tsx"
    },
    "/glossary": {
      "filePath": "glossary.tsx"
    },
    "/journal": {
      "filePath": "journal.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/quiz": {
      "filePath": "quiz.tsx"
    },
    "/quiz_result": {
      "filePath": "quiz_result.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/sales-customer-insights": {
      "filePath": "sales-customer-insights.tsx"
    },
    "/shop": {
      "filePath": "shop.tsx"
    },
    "/shopDetails": {
      "filePath": "shopDetails.tsx"
    },
    "/testimonials": {
      "filePath": "testimonials.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
